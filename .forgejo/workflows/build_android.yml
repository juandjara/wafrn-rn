name: Build Android App

on:
  workflow_dispatch:
    inputs:
      buildType:
        type: choice
        description: 'Build type to run'
        options:
          - dev
          - prod-base
          - prod-foss
          - prod-google
          - prod-all

env:
  UNSIGNED_APK: 1
  NODE_OPTIONS: --openssl-legacy-provider --max_old_space_size=4096

jobs:
  test:
    runs-on: docker
    container:
      image: node:22-alpine

    steps:
      - name: 🏗 Checkout repository
        uses: actions/checkout@v4

      - name: 📦 Install npm dependencies
        run: npm ci && npm rebuild lightningcss

      - name: 🧪 Run TypeScript check
        run: npm run tsc

      - name: 🧹 Run ESLint
        run: npm run lint

  build:
    needs: test
    runs-on: docker
    container:
      image: node:22

    steps:
      - name: '🏗 Checkout repository'
        uses: actions/checkout@v4

      - name: '📦 Install Java'
        run: |
          apt-get update -y
          apt-get install -y openjdk-17-jdk-headless

      - name: '📦 Setup Android environment'
        run: |
          curl "https://dl.google.com/android/repository/commandlinetools-linux-6200805_latest.zip" > tools.zip
          export ANDROID_HOME=$PWD/.android
          export GRADLE_USER_HOME=$PWD/.gradle
          mkdir -p ./.android
          unzip tools.zip -d ./.android
          mkdir -p $PWD/.android/cmdline-tools/latest
          mv $PWD/.android/tools/ $PWD/.android/cmdline-tools/latest
          export ANDROID_BIN=$ANDROID_HOME/cmdline-tools/latest
          export PATH="$ANDROID_BIN/emulator:$ANDROID_BIN/tools:$ANDROID_BIN/tools/bin:$ANDROID_BIN/platform-tools:$PATH" >> $FORGEJO_ENV
          echo "sdkmanager version:"
          $ANDROID_BIN/tools/bin/sdkmanager --sdk_root=${ANDROID_HOME} --version
          set +o pipefail
          yes | $ANDROID_BIN/tools/bin/sdkmanager --sdk_root=${ANDROID_HOME} --licenses
          set -o pipefail
          $ANDROID_BIN/tools/bin/sdkmanager --sdk_root=${ANDROID_HOME} "platform-tools"
          export PATH=$PATH:${ANDROID_HOME}/platform-tools/
          echo ANDROID_HOME=${ANDROID_HOME} >> $FORGEJO_ENV
          echo PATH=$PATH >> $FORGEJO_ENV
          echo GRADLE_USER_HOME=$GRADLE_USER_HOME >> $FORGEJO_ENV

      - name: '📦 Install npm dependencies'
        run: npm ci && npm rebuild lightningcss

      - name: '📱 Build Development APK'
        if: github.event.inputs.buildType == 'dev'
        run: |
          export UNSIGNED_APK=0 # sign with debug key
          bash ./scripts/android_build.sh dev
          mkdir -p ./outputs/dev
          cp ./android/app/build/outputs/apk/debug/*.apk ./outputs/dev

      - name: '📱 Build Production APK'
        if: github.event.inputs.buildType == 'prod-all' || github.event.inputs.buildType == 'prod-base'
        run: |
          bash ./scripts/android_build.sh prod
          mkdir -p ./outputs/prod
          cp ./android/app/build/outputs/apk/release/*.apk ./outputs/prod

      - name: '📱 Build Production APK (FOSS version)'
        if: github.event.inputs.buildType == 'prod-all' || github.event.inputs.buildType == 'prod-foss'
        run: |
          bash ./scripts/android_build.sh prod-foss
          mkdir -p ./outputs/prod-foss
          cp ./android/app/build/outputs/apk/release/*.apk ./outputs/prod-foss

      - name: '📱 Build Production AAB'
        if: github.event.inputs.buildType == 'prod-all' || github.event.inputs.buildType == 'prod-google'
        run: |
          bash ./scripts/android_build.sh prod-google
          mkdir -p ./outputs/prod-google
          cp ./android/app/build/outputs/bundle/release/*.aab ./outputs/prod-google

      - name: '🔑 Sign APKs and AABs'
        if: github.event.inputs.buildType != 'dev'
        uses: https://github.com/ilharp/sign-android-release@v2
        id: sign
        with:
          releaseDir: ./outputs
          signingKey: ${{ secrets.WAFRN_UPLOAD_STORE_FILE_BASE64 }}
          keyAlias: ${{ secrets.WAFRN_UPLOAD_KEY_ALIAS }}
          keyStorePassword: ${{ secrets.WAFRN_UPLOAD_STORE_PASSWORD }}
          keyPassword: ${{ secrets.WAFRN_UPLOAD_KEY_PASSWORD }}
          buildToolsVersion: '35.0.0'

      - name: '📦 Upload build artifacts to Codeberg'
        uses: https://data.forgejo.org/forgejo/upload-artifact@v4
        with:
          name: signed-files.zip
          path: |
            ./outputs/**/*-debug.apk
            ./outputs/**/*-signed.apk
            ./outputs/**/*-signed.aab
          retention-days: 7
          compression-level: 0 # APKs are already compressed
